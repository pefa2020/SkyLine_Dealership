{
  "swagger": "2.0",
  "info": {
    "title": "Car Dealership API",
    "description": "API documentation for a car dealership system",
    "version": "1.0"
  },
  "securityDefinitions": {
    "JWTAuth": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header",
      "description": "Enter JWT token in format Bearer {token}"
    }
  },
  "tags": [
    {
      "name": "Users",
      "description": "Operations related to users"
    },
    {
      "name": "Managers",
      "description": "Operations related to managers"
    },
    {
      "name": "Technicians",
      "description": "Operations related to managers"
    },
    {
      "name": "Cars",
      "description": "Operations related to car inventory and details"
    },
    {
      "name": "Purchases",
      "description": "Operations related to purchasing a car or other services"
    },
    {
      "name": "Test Drive Appointments",
      "description": "Operations related to test drive appointments"
    },
    {
      "name": "Service Appointments",
      "description": "Operations related to service appointments"
    },
    {
      "name": "Cart",
      "description": "Operations related to shopping cart management"
    },
    {
      "name": "Favorites",
      "description": "Operations related to favorites management"
    },
    {
      "name": "Authentication",
      "description": "Operations related to user authentication"
    },
    {
      "name": "Negotiations",
      "description": "Operations related to manager-client negotiation"
    },
    {
      "name": "Financial Stub",
      "description": "Operations related to the Financial Stub middle-ware"
    }
  ],
  "definitions": {
    "Car": {
      "type": "object",
      "properties": {
        "vin": {
          "type": "string"
        },
        "car_id": {
          "type": "integer"
        },
        "make": {
          "type": "string"
        },
        "model": {
          "type": "string"
        },
        "year": {
          "type": "integer"
        },
        "price": {
          "type": "number"
        },
        "exterior_color": {
          "type": "string"
        },
        "interior_color": {
          "type": "string"
        },
        "wheel_drive": {
          "type": "string"
        },
        "mileage": {
          "type": "integer"
        },
        "transmission": {
          "type": "string"
        },
        "seats": {
          "type": "integer",
          "description": "VIN of the car"
        }
      }
    },
    "User": {
      "type": "object",
      "properties": {
        "user_id": {
          "type": "integer",
          "description": "ID of the user"
        },
        "first_name": {
          "type": "string",
          "description": "First name of the user"
        },
        "last_name": {
          "type": "string",
          "description": "Last name of the user"
        },
        "phone_number": {
          "type": "string",
          "description": "Phone number of the user"
        },
        "role": {
          "type": "string",
          "description": "Role of the user"
        },
        "username": {
          "type": "string",
          "description": "Username of the user"
        },
        "email": {
          "type": "string",
          "description": "Email of the user"
        }
      }
    },
    "Appointment": {
      "type": "object",
      "properties": {
        "appt_id": {
          "type": "integer",
          "description": "ID of the appointment"
        },
        "vin": {
          "type": "string",
          "description": "VIN of the vehicle"
        },
        "scheduled_date": {
          "type": "string",
          "format": "date-time",
          "description": "Scheduled date and time of the appointment"
        },
        "appointment": {
          "type": "string",
          "description": "Appointment status"
        },
        "description": {
          "type": "string",
          "description": "Description of the service appointment"
        },
        "price": {
          "type": "number",
          "description": "Price of the service appointment"
        },
        "ticket": {
          "type": "string",
          "description": "Ticket status of the appointment"
        },
        "make": {
          "type": "string",
          "description": "Make of the vehicle"
        },
        "model": {
          "type": "string",
          "description": "Model of the vehicle"
        },
        "year": {
          "type": "integer",
          "description": "Year of the vehicle"
        }
      }
    },
    "TestDriveAppointment": {
      "type": "object",
      "properties": {
        "appt_id": {
          "type": "integer",
          "description": "ID of the appointment"
        },
        "vin": {
          "type": "string",
          "description": "VIN of the vehicle"
        },
        "scheduled_date": {
          "type": "string",
          "format": "date-time",
          "description": "Scheduled date and time of the appointment"
        },
        "status": {
          "type": "string",
          "description": "Status of the appointment"
        }
      }
    }
  },
  "basePath": "/",
  "schemes": [
    "http"
  ],
  "paths": {
    "/negotiations/manager/{manager_id}": {
      "get": {
        "tags": [
          "Negotiations",
          "Managers"
        ],
        "summary": "Get negotiations for manager",
        "security": [
          {
            "JWTAuth": []
          }
        ],
        "description": "Returns negotiations associated with a specific manager",
        "parameters": [
          {
            "name": "manager_id",
            "in": "path",
            "description": "ID of the manager",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "user_id": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "user_name": {
                    "type": "string"
                  },
                  "vehicle_id": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/updatePrice": {
      "post": {
        "tags": [
          "Managers"
        ],
        "summary": "Update car price",
        "description": "Updates the price of a car",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "JSON object containing VIN and new price",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "vin": {
                  "type": "string"
                },
                "new_price": {
                  "type": "number"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Price updated successfully"
          }
        }
      }
    },
    "/managers": {
      "get": {
        "tags": [
          "Managers"
        ],
        "summary": "Get managers",
        "description": "Returns information about all managers",
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "name": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/messages/{vehicle_id}/{manager_id}": {
      "get": {
        "tags": [
          "Negotiations",
          "Managers"
        ],
        "summary": "Get messages",
        "description": "Returns messages related to a vehicle and manager",
        "parameters": [
          {
            "name": "vehicle_id",
            "in": "path",
            "description": "ID of the vehicle",
            "required": true,
            "type": "string"
          },
          {
            "name": "manager_id",
            "in": "path",
            "description": "ID of the manager",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "from_id": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "to_id": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "description": {
                    "type": "string"
                  },
                  "insert_date": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/messages": {
      "post": {
        "tags": [
          "Negotiations"
        ],
        "summary": "Post",
        "security": [
          {
            "JWTAuth": []
          }
        ],
        "description": "Sends a message",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "JSON object containing message details",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "from_id": {
                  "type": "integer",
                  "format": "int64"
                },
                "to_id": {
                  "type": "integer",
                  "format": "int64"
                },
                "message": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Message sent successfully"
          }
        }
      }
    },
    "/updateDealershipService": {
      "post": {
        "tags": [
          "Service Appointments",
          "Managers"
        ],
        "summary": "Update dealership service",
        "security": [
          {
            "JWTAuth": []
          }
        ],
        "description": "Updates a dealership service option",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "JSON object containing service option details",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "option_id": {
                  "type": "integer",
                  "format": "int64"
                },
                "description": {
                  "type": "string"
                },
                "price": {
                  "type": "number"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Service updated"
          }
        }
      }
    },
    "/addDealershipService": {
      "post": {
        "tags": [
          "Managers",
          "Service Appointments"
        ],
        "summary": "Add dealership service",
        "security": [
          {
            "JWTAuth": []
          }
        ],
        "description": "Adds a new dealership service option",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "JSON object containing service option details",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "service_option": {
                  "type": "string"
                },
                "price": {
                  "type": "number"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "New service added"
          }
        }
      }
    },
    "/getAllServicesInfo": {
      "get": {
        "tags": [
          "Service Appointments"
        ],
        "summary": "Get all services information",
        "security": [
          {
            "JWTAuth": []
          }
        ],
        "description": "Returns information about all dealership services",
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "option_id": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "description": {
                    "type": "string"
                  },
                  "price": {
                    "type": "number"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/inventoryInStock": {
      "get": {
        "tags": [
          "Cars"
        ],
        "summary": "Get inventory in stock",
        "description": "Returns inventory of cars in stock",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of items per page",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "searchQuery",
            "in": "query",
            "description": "Search query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "inStockInventory": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "vin": {
                        "type": "string"
                      },
                      "make": {
                        "type": "string"
                      },
                      "model": {
                        "type": "string"
                      },
                      "year": {
                        "type": "integer",
                        "format": "int64"
                      },
                      "price": {
                        "type": "number"
                      },
                      "exterior_color": {
                        "type": "string"
                      },
                      "interior_color": {
                        "type": "string"
                      },
                      "wheel_drive": {
                        "type": "string"
                      },
                      "mileage": {
                        "type": "number"
                      },
                      "transmission": {
                        "type": "string"
                      },
                      "seats": {
                        "type": "integer",
                        "format": "int64"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/carDetails": {
      "post": {
        "tags": [
          "Cars"
        ],
        "summary": "Get car details",
        "description": "Returns details of a car",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "JSON object containing car ID",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "carID": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "carDetails": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "vin": {
                        "type": "string"
                      },
                      "make": {
                        "type": "string"
                      },
                      "model": {
                        "type": "string"
                      },
                      "year": {
                        "type": "integer",
                        "format": "int64"
                      },
                      "price": {
                        "type": "number"
                      },
                      "exterior_color": {
                        "type": "string"
                      },
                      "interior_color": {
                        "type": "string"
                      },
                      "wheel_drive": {
                        "type": "string"
                      },
                      "mileage": {
                        "type": "number"
                      },
                      "transmission": {
                        "type": "string"
                      },
                      "seats": {
                        "type": "integer",
                        "format": "int64"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/userInfo": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Get user information",
        "security": [
          {
            "JWTAuth": []
          }
        ],
        "description": "Returns information about a user",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "JSON object containing user ID",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "userID": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "userInfo": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "user_id": {
                        "type": "integer",
                        "format": "int64"
                      },
                      "job_title": {
                        "type": "string"
                      },
                      "phone_number": {
                        "type": "string"
                      },
                      "first_name": {
                        "type": "string"
                      },
                      "last_name": {
                        "type": "string"
                      },
                      "username": {
                        "type": "string"
                      },
                      "email": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/addUser": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Add user",
        "description": "Adds a new user",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "JSON object containing user details",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "username": {
                  "type": "string"
                },
                "first_name": {
                  "type": "string"
                },
                "last_name": {
                  "type": "string"
                },
                "email": {
                  "type": "string"
                },
                "phone_number": {
                  "type": "string"
                },
                "job": {
                  "type": "string"
                },
                "password": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User added successfully",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                },
                "user_id": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          }
        }
      }
    },
    "/authenticate": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Authenticate user",
        "description": "Authenticates a user",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "JSON object containing username and password",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "username": {
                  "type": "string"
                },
                "password": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Authentication successful",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                },
                "user_id": {
                  "type": "integer",
                  "format": "int64"
                },
                "job_title": {
                  "type": "string"
                },
                "access_token": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/profile": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get user profile",
        "security": [
          {
            "JWTAuth": []
          }
        ],
        "description": "Returns information about the user's profile",
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "about": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/logout": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Logout user",
        "description": "Logs out the user",
        "responses": {
          "200": {
            "description": "Logout successful"
          }
        }
      }
    },
    "/myGarageInv": {
      "post": {
        "tags": [
          "Cars"
        ],
        "summary": "Get user's garage inventory",
        "security": [
          {
            "JWTAuth": []
          }
        ],
        "description": "Returns inventory of cars in the user's garage",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "JSON object containing customer ID",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "custID": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "myGarageInv": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "cust_id": {
                        "type": "integer",
                        "format": "int64"
                      },
                      "vin": {
                        "type": "string"
                      },
                      "make": {
                        "type": "string"
                      },
                      "model": {
                        "type": "string"
                      },
                      "year": {
                        "type": "integer",
                        "format": "int64"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/allmake": {
      "get": {
        "tags": [
          "Cars"
        ],
        "summary": "Get all car makes",
        "security": [
          {
            "JWTAuth": []
          }
        ],
        "description": "Returns all car makes available",
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "makes": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "make": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/maketomodel": {
      "post": {
        "tags": [
          "Cars"
        ],
        "summary": "Get models by make",
        "security": [
          {
            "JWTAuth": []
          }
        ],
        "description": "Returns models related to a specific car make",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "JSON object containing car make",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "make": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "models": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "model": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/modeltoyear": {
      "post": {
        "tags": [
          "Cars"
        ],
        "summary": "Get years by model",
        "security": [
          {
            "JWTAuth": []
          }
        ],
        "description": "Returns years related to a specific car model",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "JSON object containing car model",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "model": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "years": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "year": {
                        "type": "integer",
                        "format": "int64"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/myGarageAddCar": {
      "post": {
        "tags": [
          "Cars"
        ],
        "summary": "Add car to user's garage",
        "security": [
          {
            "JWTAuth": []
          }
        ],
        "description": "Adds a car to a user's garage",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "JSON object containing car details",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "custID": {
                  "type": "integer",
                  "format": "int64"
                },
                "make": {
                  "type": "string"
                },
                "model": {
                  "type": "string"
                },
                "year": {
                  "type": "integer",
                  "format": "int64"
                },
                "vin": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Car Added to My Garage,",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/carPurchaseHistory": {
      "post": {
        "tags": [
          "Users",
          "Purchases"
        ],
        "summary": "Retrieves car purchase history for a user",
        "security": [
          {
            "JWTAuth": []
          }
        ],
        "description": "Retrieves the car purchase history for a user based on the user ID.\n",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "User ID",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "userID": {
                  "type": "integer",
                  "description": "ID of the user"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "carPurchaseHistory": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "c_make": {
                        "type": "string",
                        "description": "Make of the car"
                      },
                      "c_model": {
                        "type": "string",
                        "description": "Model of the car"
                      },
                      "c_year": {
                        "type": "integer",
                        "description": "Year of the car"
                      },
                      "c_vin": {
                        "type": "string",
                        "description": "VIN of the car"
                      },
                      "insert_date": {
                        "type": "string",
                        "description": "Date of purchase"
                      },
                      "negotiation_price": {
                        "type": "number",
                        "description": "Negotiated price"
                      },
                      "financeOrCash": {
                        "type": "string",
                        "description": "Finance or Cash"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/productPurchaseHistory": {
      "post": {
        "tags": [
          "Users",
          "Purchases"
        ],
        "summary": "Retrieves product purchase history for a user",
        "security": [
          {
            "JWTAuth": []
          }
        ],
        "description": "Retrieves the product purchase history for a user based on the user ID.\n",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "User ID",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "userID": {
                  "type": "integer",
                  "description": "ID of the user"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "productPurchaseHistory": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "p_name": {
                        "type": "string",
                        "description": "Name of the product"
                      },
                      "p_price": {
                        "type": "number",
                        "description": "Price of the product"
                      },
                      "p_description": {
                        "type": "string",
                        "description": "Description of the product"
                      },
                      "insert_date": {
                        "type": "string",
                        "description": "Date of purchase"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/updateUserInfo": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Updates user information",
        "security": [
          {
            "JWTAuth": []
          }
        ],
        "description": "Updates user information such as first name, last name, email, and phone number.\n",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "User information to be updated",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "userID": {
                  "type": "integer",
                  "description": "ID of the user"
                },
                "firstName": {
                  "type": "string",
                  "description": "First name of the user"
                },
                "lastName": {
                  "type": "string",
                  "description": "Last name of the user"
                },
                "email": {
                  "type": "string",
                  "description": "Email of the user"
                },
                "phoneNumber": {
                  "type": "string",
                  "description": "Phone number of the user"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User information updated successfully",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Success message"
                }
              }
            }
          }
        }
      }
    },
    "/addFavorite": {
      "post": {
        "tags": [
          "Favorites"
        ],
        "summary": "Adds a car to favorites",
        "security": [
          {
            "JWTAuth": []
          }
        ],
        "description": "Adds a car to the user's favorites list.\n",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Car information to be added to favorites",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "custID": {
                  "type": "integer",
                  "description": "ID of the user"
                },
                "make": {
                  "type": "string",
                  "description": "Make of the car"
                },
                "model": {
                  "type": "string",
                  "description": "Model of the car"
                },
                "year": {
                  "type": "integer",
                  "description": "Year of the car"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Car added to favorites successfully",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Success message"
                }
              }
            }
          }
        }
      }
    },
    "/checkFavorite": {
      "post": {
        "tags": [
          "Favorites"
        ],
        "summary": "Checks if a car is in favorites",
        "description": "Checks if a car is in the user's favorites list.\n",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Car information to be checked in favorites",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "custID": {
                  "type": "integer",
                  "description": "ID of the user"
                },
                "make": {
                  "type": "string",
                  "description": "Make of the car"
                },
                "model": {
                  "type": "string",
                  "description": "Model of the car"
                },
                "year": {
                  "type": "integer",
                  "description": "Year of the car"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success message",
            "schema": {
              "type": "object",
              "properties": {
                "isFavorited": {
                  "type": "boolean",
                  "description": "Indicates whether the car is favorited or not"
                }
              }
            }
          }
        }
      }
    },
    "/delFavorite": {
      "post": {
        "tags": [
          "Favorites"
        ],
        "summary": "Deletes a car from favorites",
        "security": [
          {
            "JWTAuth": []
          }
        ],
        "description": "Deletes a car from the user's favorites list.\n",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Car information to be deleted from favorites",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "custID": {
                  "type": "integer",
                  "description": "ID of the user"
                },
                "make": {
                  "type": "string",
                  "description": "Make of the car"
                },
                "model": {
                  "type": "string",
                  "description": "Model of the car"
                },
                "year": {
                  "type": "integer",
                  "description": "Year of the car"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Car deleted from favorites successfully",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Success message"
                }
              }
            }
          }
        }
      }
    },
    "/favoriteCars": {
      "post": {
        "tags": [
          "Favorites"
        ],
        "summary": "Retrieves favorite cars for a user",
        "security": [
          {
            "JWTAuth": []
          }
        ],
        "description": "Retrieves the list of favorite cars for a user.\n",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "User ID",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "custID": {
                  "type": "integer",
                  "description": "ID of the user"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "favoriteCars": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "make": {
                        "type": "string",
                        "description": "Make of the car"
                      },
                      "model": {
                        "type": "string",
                        "description": "Model of the car"
                      },
                      "year": {
                        "type": "integer",
                        "description": "Year of the car"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/createAccount": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Creates a new user account",
        "security": [
          {
            "JWTAuth": []
          }
        ],
        "description": "Creates a new user account with the provided details. \n",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "User account details",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "username": {
                  "type": "string",
                  "description": "Username of the user"
                },
                "firstName": {
                  "type": "string",
                  "description": "First name of the user"
                },
                "lastName": {
                  "type": "string",
                  "description": "Last name of the user"
                },
                "email": {
                  "type": "string",
                  "description": "Email of the user"
                },
                "phoneNumber": {
                  "type": "string",
                  "description": "Phone number of the user"
                },
                "jobId": {
                  "type": "integer",
                  "description": "ID of the job (Technician or Manager)"
                },
                "password": {
                  "type": "string",
                  "description": "Password of the user"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Account created successfully",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Confirmation message"
                },
                "user_id": {
                  "type": "integer",
                  "description": "ID of the newly created user"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/getUsers": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Retrieves all users",
        "security": [
          {
            "JWTAuth": []
          }
        ],
        "description": "Retrieves details of all users.",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "users": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/User"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/deleteUser/{user_id}": {
      "delete": {
        "tags": [
          "Users"
        ],
        "summary": "Deletes a user",
        "security": [
          {
            "JWTAuth": []
          }
        ],
        "description": "Deletes a user with the specified user ID.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "user_id",
            "description": "ID of the user to be deleted",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "User deleted successfully"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/updateUser/{user_id}": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Updates a user",
        "security": [
          {
            "JWTAuth": []
          }
        ],
        "description": "Updates details of a user with the specified user ID. - application/json",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "user_id",
            "description": "ID of the user to be updated",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Updated user details",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "first_name": {
                  "type": "string",
                  "description": "Updated first name of the user"
                },
                "last_name": {
                  "type": "string",
                  "description": "Updated last name of the user"
                },
                "phone_number": {
                  "type": "string",
                  "description": "Updated phone number of the user"
                },
                "job_id": {
                  "type": "integer",
                  "description": "Updated job ID (Technician or Manager)"
                },
                "username": {
                  "type": "string",
                  "description": "Updated username of the user"
                },
                "email": {
                  "type": "string",
                  "description": "Updated email of the user"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User updated successfully"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/scheduleTestDriveAppt": {
      "post": {
        "tags": [
          "Test Drive Appointments"
        ],
        "summary": "Schedules a test drive appointment",
        "security": [
          {
            "JWTAuth": []
          }
        ],
        "description": "Schedules a test drive appointment for a user.\n",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Test drive appointment information",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "custID": {
                  "type": "integer",
                  "description": "ID of the user"
                },
                "carID": {
                  "type": "integer",
                  "description": "ID of the car"
                },
                "apptDate": {
                  "type": "string",
                  "format": "date",
                  "description": "Date of the appointment (YYYY-MM-DD)"
                },
                "apptTime": {
                  "type": "string",
                  "format": "time",
                  "description": "Time of the appointment (HH:MM)"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Test drive appointment made successfully",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Success message"
                }
              }
            }
          }
        }
      }
    },
    "/rescheduleTestDriveAppt": {
      "post": {
        "tags": [
          "Test Drive Appointments"
        ],
        "summary": "Reschedule a test drive appointment",
        "security": [
          {
            "JWTAuth": []
          }
        ],
        "description": "Reschedules a test drive appointment by updating the scheduled date.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Details of the appointment to reschedule",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "apptID": {
                  "type": "integer",
                  "description": "ID of the appointment to reschedule"
                },
                "datetime": {
                  "type": "string",
                  "format": "date-time",
                  "description": "New scheduled date and time for the appointment"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Message indicating the appointment was rescheduled"
                }
              }
            }
          }
        }
      }
    },
    "/availableTestDriveTimes": {
      "post": {
        "tags": [
          "Test Drive Appointments"
        ],
        "summary": "Get available test drive times for a specific date",
        "security": [
          {
            "JWTAuth": []
          }
        ],
        "description": "Returns available test drive times for a specified date, based on existing appointments.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Date for which to retrieve available times",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "date": {
                  "type": "string",
                  "format": "date",
                  "description": "Date for which to retrieve available times"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "availableTimes": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "List of available test drive times"
                }
              }
            }
          }
        }
      }
    },
    "/cancelTestDriveAppt": {
      "post": {
        "tags": [
          "Test Drive Appointments"
        ],
        "summary": "Cancel a test drive appointment",
        "security": [
          {
            "JWTAuth": []
          }
        ],
        "description": "Cancels a test drive appointment by updating its status.]",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Details of the appointment to cancel",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "apptID": {
                  "type": "integer",
                  "description": "ID of the appointment to cancel"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "testDriveAppt": {
                  "type": "string",
                  "description": "Message indicating the appointment was canceled"
                }
              }
            }
          }
        }
      }
    },
    "/checkCarInInv": {
      "post": {
        "tags": [
          "Cars"
        ],
        "summary": "Checks if a car is in inventory",
        "description": "Checks if a car with the provided VIN is in inventory. Does not require authentication.\n",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "VIN of the car to check",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "custID": {
                  "type": "string",
                  "description": "VIN of the car"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Message indicating if the car is found or not"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          }
        }
      }
    },
    "/scheduleServiceAppt": {
      "post": {
        "tags": [
          "Service Appointments"
        ],
        "summary": "Schedule a service appointment",
        "security": [
          {
            "JWTAuth": []
          }
        ],
        "description": "Schedule a service appointment for a user.\n",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Service appointment information",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "custID": {
                  "type": "integer",
                  "description": "ID of the user"
                },
                "serviceType": {
                  "type": "string",
                  "description": "Type of service required"
                },
                "apptDate": {
                  "type": "string",
                  "format": "date",
                  "description": "Date of the appointment (YYYY-MM-DD)"
                },
                "apptTime": {
                  "type": "string",
                  "format": "time",
                  "description": "Time of the appointment (HH:MM)"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Service appointment made successfully",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Success message"
                }
              }
            }
          }
        }
      }
    },
    "/availableServiceTimes": {
      "post": {
        "tags": [
          "Service Appointments"
        ],
        "summary": "Get available service times for a specific date",
        "security": [
          {
            "JWTAuth": []
          }
        ],
        "description": "Returns available service times for a specified date, based on existing appointments.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Date for which to retrieve available times",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "date": {
                  "type": "string",
                  "format": "date",
                  "description": "Date for which to retrieve available times"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "availableTimes": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "List of available service times"
                }
              }
            }
          }
        }
      }
    },
    "/addCard": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Add a credit card to user's account",
        "security": [
          {
            "JWTAuth": []
          }
        ],
        "description": "Adds a credit card to the user's account for payment processing.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Details of the credit card to add",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "custID": {
                  "type": "integer",
                  "description": "ID of the user adding the card"
                },
                "cardNum": {
                  "type": "string",
                  "description": "Credit card number"
                },
                "cardHolderName": {
                  "type": "string",
                  "description": "Name of the cardholder"
                },
                "cvc": {
                  "type": "string",
                  "description": "Card verification code"
                },
                "expDate": {
                  "type": "string",
                  "format": "date",
                  "description": "Expiry date of the card"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Message indicating the card was added successfully"
                }
              }
            }
          }
        }
      }
    },
    "/myCart": {
      "post": {
        "tags": [
          "Cart"
        ],
        "summary": "Get user's shopping cart contents",
        "security": [
          {
            "JWTAuth": []
          }
        ],
        "description": "Retrieves the contents of the user's shopping cart.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "ID of the user whose cart to retrieve",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "userID": {
                  "type": "integer",
                  "description": "ID of the user whose cart to retrieve"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "myCart": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "product_id": {
                        "type": "integer",
                        "description": "ID of the product"
                      },
                      "product_name": {
                        "type": "string",
                        "description": "Name of the product"
                      },
                      "quantity": {
                        "type": "integer",
                        "description": "Quantity of the product in the cart"
                      },
                      "price": {
                        "type": "number",
                        "description": "Price of the product"
                      },
                      "description": {
                        "type": "string",
                        "description": "Description of the product"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/changeQuantity": {
      "post": {
        "tags": [
          "Cart"
        ],
        "summary": "Updates the quantity of a car in the shopping cart",
        "security": [
          {
            "JWTAuth": []
          }
        ],
        "description": "Updates the quantity of a car in the user's shopping cart.\n",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Cart item information to be updated",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "custID": {
                  "type": "integer",
                  "description": "ID of the user"
                },
                "carID": {
                  "type": "integer",
                  "description": "ID of the car"
                },
                "quantity": {
                  "type": "integer",
                  "description": "New quantity of the car"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Cart item quantity updated successfully",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Success message"
                }
              }
            }
          }
        }
      }
    },
    "/testDriveAppts": {
      "get": {
        "tags": [
          "Test Drive Appointments"
        ],
        "summary": "Get test drive appointments",
        "description": "Retrieves test drive appointments along with user details.",
        "security": [
          {
            "JWTAuth": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "testDriveAppts": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "user_id": {
                        "type": "integer",
                        "description": "ID of the user"
                      },
                      "first_name": {
                        "type": "string",
                        "description": "First name of the user"
                      },
                      "last_name": {
                        "type": "string",
                        "description": "Last name of the user"
                      },
                      "appt_id": {
                        "type": "integer",
                        "description": "ID of the appointment"
                      },
                      "scheduled_date": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Scheduled date and time of the appointment"
                      },
                      "status": {
                        "type": "string",
                        "description": "Status of the appointment"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/negotiation": {
      "post": {
        "tags": [
          "Negotiations"
        ],
        "summary": "Get negotiation details",
        "description": "Retrieves negotiation details for a manager.",
        "security": [
          {
            "JWTAuth": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "ID of the manager to retrieve negotiation details",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "managerID": {
                  "type": "integer",
                  "description": "ID of the manager"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "negotiation": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "user_id": {
                        "type": "integer",
                        "description": "ID of the user"
                      },
                      "first_name": {
                        "type": "string",
                        "description": "First name of the user"
                      },
                      "last_name": {
                        "type": "string",
                        "description": "Last name of the user"
                      },
                      "vin": {
                        "type": "string",
                        "description": "VIN of the car under negotiation"
                      },
                      "price": {
                        "type": "number",
                        "description": "Price under negotiation"
                      },
                      "insert_date": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Date and time of negotiation"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/negotiationSale": {
      "post": {
        "tags": [
          "Negotiations"
        ],
        "summary": "Get negotiation sale details",
        "description": "Retrieves negotiation sale details for a specific sale.",
        "security": [
          {
            "JWTAuth": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "ID of the sale to retrieve negotiation details",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "saleID": {
                  "type": "integer",
                  "description": "ID of the sale"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "negotiationSale": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "user_id": {
                        "type": "integer",
                        "description": "ID of the user"
                      },
                      "first_name": {
                        "type": "string",
                        "description": "First name of the user"
                      },
                      "last_name": {
                        "type": "string",
                        "description": "Last name of the user"
                      },
                      "vin": {
                        "type": "string",
                        "description": "VIN of the car sold"
                      },
                      "make": {
                        "type": "string",
                        "description": "Make of the car"
                      },
                      "model": {
                        "type": "string",
                        "description": "Model of the car"
                      },
                      "year": {
                        "type": "integer",
                        "description": "Year of the car"
                      },
                      "insert_date": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Date and time of the sale"
                      },
                      "price": {
                        "type": "number",
                        "description": "Sale price"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/vehicleDetails/{vin}": {
      "get": {
        "tags": [
          "Cars"
        ],
        "summary": "Get vehicle details by VIN",
        "description": "Retrieves vehicle details based on the provided VIN.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "vin",
            "in": "path",
            "description": "VIN (Vehicle Identification Number)",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "carDetails": {
                  "type": "object",
                  "properties": {
                    "vin": {
                      "type": "string",
                      "description": "VIN of the vehicle"
                    },
                    "make": {
                      "type": "string",
                      "description": "Make of the vehicle"
                    },
                    "model": {
                      "type": "string",
                      "description": "Model of the vehicle"
                    },
                    "year": {
                      "type": "integer",
                      "description": "Year of the vehicle"
                    },
                    "price": {
                      "type": "number",
                      "description": "Price of the vehicle"
                    },
                    "exterior_color": {
                      "type": "string",
                      "description": "Exterior color of the vehicle"
                    },
                    "interior_color": {
                      "type": "string",
                      "description": "Interior color of the vehicle"
                    },
                    "wheel_drive": {
                      "type": "string",
                      "description": "Wheel drive of the vehicle"
                    },
                    "mileage": {
                      "type": "integer",
                      "description": "Mileage of the vehicle"
                    },
                    "transmission": {
                      "type": "string",
                      "description": "Transmission type of the vehicle"
                    },
                    "seats": {
                      "type": "integer",
                      "description": "Number of seats in the vehicle"
                    },
                    "engine": {
                      "type": "string",
                      "description": "Engine details of the vehicle"
                    },
                    "keys_given": {
                      "type": "string",
                      "description": "Whether keys are given for the vehicle"
                    },
                    "tax": {
                      "type": "number",
                      "description": "Tax amount for the vehicle"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/currentappointments": {
      "post": {
        "tags": [
          "Service Appointments"
        ],
        "summary": "Get current appointments",
        "description": "Retrieves current service appointments for a user.",
        "security": [
          {
            "JWTAuth": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "User ID to retrieve current appointments",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "userID": {
                  "type": "integer",
                  "description": "ID of the user"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "appointments": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Appointment"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/historyappointments": {
      "post": {
        "tags": [
          "Service Appointments"
        ],
        "summary": "Get past appointments",
        "description": "Retrieves past service appointments for a user.",
        "security": [
          {
            "JWTAuth": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "User ID to retrieve past appointments",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "userID": {
                  "type": "integer",
                  "description": "ID of the user"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "appointments": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Appointment"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/currtestdrive": {
      "post": {
        "tags": [
          "Test Drive Appointments"
        ],
        "summary": "Get current test drive appointments",
        "description": "Retrieves current test drive appointments for a user.",
        "security": [
          {
            "JWTAuth": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "User ID to retrieve current test drive appointments",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "userID": {
                  "type": "integer",
                  "description": "ID of the user"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "appointments": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/TestDriveAppointment"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/pasttestdrive": {
      "post": {
        "tags": [
          "Test Drive Appointments"
        ],
        "summary": "Get past test drive appointments",
        "description": "Retrieves past test drive appointments for a user.",
        "security": [
          {
            "JWTAuth": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "User ID to retrieve past test drive appointments",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "userID": {
                  "type": "integer",
                  "description": "ID of the user"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "appointments": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/TestDriveAppointment"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/invManage": {
      "post": {
        "tags": [
          "Cars"
        ],
        "summary": "Manage inventory",
        "description": "Retrieve details of a car in inventory",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "VIN of the car",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "vin": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Car"
            }
          },
          "404": {
            "description": "Car not found"
          }
        }
      }
    },
    "/openTickets": {
      "get": {
        "tags": [
          "Technicians"
        ],
        "summary": "Retrieve open tickets",
        "description": "Retrieve open service tickets",
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "No open tickets found"
          }
        }
      }
    },
    "/openTechTickets": {
      "post": {
        "tags": [
          "Technicians"
        ],
        "summary": "Retrieve open tickets for technician",
        "description": "Retrieve open service tickets assigned to a technician",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Technician ID",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "tech_id": {
                  "type": "integer"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "No open technician tickets found"
          }
        }
      }
    },
    "/closedTechTickets": {
      "post": {
        "tags": [
          "Technicians"
        ],
        "summary": "Retrieve closed tickets for technician",
        "description": "Retrieve closed service tickets assigned to a technician",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Technician ID",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "tech_id": {
                  "type": "integer"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "No closed technician tickets found"
          }
        }
      }
    },
    "/assigntech": {
      "post": {
        "tags": [
          "Technicians",
          "Managers"
        ],
        "summary": "Assign technician to ticket",
        "description": "Assign a technician to a service ticket",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Appointment ID and Technician ID",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "apptID": {
                  "type": "integer"
                },
                "tech_id": {
                  "type": "integer"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "TicketStatus": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/updateTicketStatus": {
      "post": {
        "tags": [
          "Technicians"
        ],
        "summary": "Update ticket status",
        "description": "Update the status of a service ticket",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Appointment ID and new status ID",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "apptID": {
                  "type": "integer"
                },
                "statusID": {
                  "type": "integer"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "TicketStatus": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/updateTicketMessage": {
      "post": {
        "tags": [
          "Technicians"
        ],
        "summary": "Update ticket message",
        "description": "Update the message of a service ticket",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Appointment ID and new message",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "apptID": {
                  "type": "integer"
                },
                "message": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "TicketMessage": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/insertCarModel": {
      "post": {
        "tags": [
          "Cars"
        ],
        "summary": "Insert car model",
        "description": "Insert a new car model into the database",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Make, model, and year of the car",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "make": {
                  "type": "string"
                },
                "model": {
                  "type": "string"
                },
                "year": {
                  "type": "integer"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "Response": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/insertCarDetails": {
      "post": {
        "tags": [
          "Cars"
        ],
        "summary": "Insert car details",
        "description": "Insert detailed information about a car into the database",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Car details including VIN, price, etc.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "vin": {
                  "type": "string"
                },
                "price": {
                  "type": "number"
                },
                "ext_color": {
                  "type": "string"
                },
                "int_color": {
                  "type": "string"
                },
                "wheel_drive": {
                  "type": "string"
                },
                "mileage": {
                  "type": "integer"
                },
                "transmission": {
                  "type": "string"
                },
                "seats": {
                  "type": "integer"
                },
                "engine": {
                  "type": "string"
                },
                "keys": {
                  "type": "string"
                },
                "tax": {
                  "type": "number"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "Response": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/getCarDetails": {
      "post": {
        "tags": [
          "Cars"
        ],
        "summary": "Get car details",
        "description": "Retrieve detailed information about a car",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "VIN of the car",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "vin": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "results": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "price": {
                        "type": "number"
                      },
                      "ext_color": {
                        "type": "string"
                      },
                      "int_color": {
                        "type": "string"
                      },
                      "wheel_drive": {
                        "type": "string"
                      },
                      "mileage": {
                        "type": "integer"
                      },
                      "transmission": {
                        "type": "string"
                      },
                      "seats": {
                        "type": "integer"
                      },
                      "engine": {
                        "type": "string"
                      },
                      "keys_given": {
                        "type": "string"
                      },
                      "tax": {
                        "type": "number"
                      },
                      "vin": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/updateCarDetails": {
      "post": {
        "tags": [
          "Cars"
        ],
        "summary": "Update car details",
        "description": "Update detailed information about a car",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Car details including VIN, price, etc.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "vin": {
                  "type": "string"
                },
                "price": {
                  "type": "number"
                },
                "ext_color": {
                  "type": "string"
                },
                "int_color": {
                  "type": "string"
                },
                "wheel_drive": {
                  "type": "string"
                },
                "mileage": {
                  "type": "integer"
                },
                "transmission": {
                  "type": "string"
                },
                "seats": {
                  "type": "integer"
                },
                "engine": {
                  "type": "string"
                },
                "keys": {
                  "type": "string"
                },
                "tax": {
                  "type": "number"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "Response": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/customerServiceAppts": {
      "post": {
        "tags": [
          "Service Appointments"
        ],
        "summary": "Customer service appointments",
        "description": "Retrieve customer's service appointments",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "User ID",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "user_id": {
                  "type": "integer"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "customerServiceAppts": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "appt_id": {
                        "type": "integer"
                      },
                      "vin": {
                        "type": "string"
                      },
                      "user_id": {
                        "type": "integer"
                      },
                      "assignedTo": {
                        "type": "integer"
                      },
                      "scheduled_date": {
                        "type": "string"
                      },
                      "description": {
                        "type": "string"
                      },
                      "price": {
                        "type": "number"
                      },
                      "service_status": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "insert_date": {
                        "type": "string"
                      },
                      "update_date": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/managerNegotiations": {
      "post": {
        "tags": [
          "Negotiations"
        ],
        "summary": "Manager negotiations",
        "description": "Retrieve negotiations managed by a manager",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Manager user ID",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "manager_user_id": {
                  "type": "integer"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "managerNegotiations": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "vin": {
                        "type": "string"
                      },
                      "price": {
                        "type": "number"
                      },
                      "update_date": {
                        "type": "string"
                      },
                      "first_name": {
                        "type": "string"
                      },
                      "last_name": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/searchFirstName": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Search by first name",
        "description": "Search for users by first name",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "First name",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "firstname": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "searchFirstName": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "first_name": {
                        "type": "string"
                      },
                      "last_name": {
                        "type": "string"
                      },
                      "phone_number": {
                        "type": "string"
                      },
                      "job_title": {
                        "type": "string"
                      },
                      "username": {
                        "type": "string"
                      },
                      "email": {
                        "type": "string"
                      },
                      "insert_date": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/add_sale_and_payment": {
      "post": {
        "tags": [
          "Managers"
        ],
        "summary": "Add sale and payment",
        "description": "Add a new car sale and payment",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "User ID, sale details, and payment information",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "user_id": {
                  "type": "integer"
                },
                "sales_id": {
                  "type": "integer"
                },
                "price": {
                  "type": "number"
                },
                "financeOrCash": {
                  "type": "string"
                },
                "vin": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean"
                },
                "message": {
                  "type": "string"
                },
                "sales_id": {
                  "type": "integer"
                }
              }
            }
          }
        }
      }
    },
    "/monthSales": {
      "post": {
        "tags": [
          "Purchases"
        ],
        "summary": "Month Sales",
        "description": "Retrieve sales data for a specific month",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Month and year",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "month": {
                  "type": "integer"
                },
                "year": {
                  "type": "integer"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object"
            }
          },
          "404": {
            "description": "No data found"
          }
        }
      }
    },
    "/monthPayments": {
      "post": {
        "tags": [
          "Purchases"
        ],
        "summary": "Month Payments",
        "description": "Retrieve payment data for a specific month",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Month and year",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "month": {
                  "type": "integer"
                },
                "year": {
                  "type": "integer"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object"
            }
          },
          "404": {
            "description": "No data found"
          }
        }
      }
    },
    "/vehicleDetailsManager": {
      "post": {
        "tags": [
          "Cars"
        ],
        "summary": "Vehicle Details Manager",
        "description": "Retrieve detailed information about a vehicle",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "VIN",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "vin": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Vehicle not found"
          },
          "500": {
            "description": "Error fetching vehicle details"
          }
        }
      }
    },
    "/insertCarInInv": {
      "post": {
        "tags": [
          "Cars"
        ],
        "summary": "Insert Car in Inventory",
        "description": "Insert a car into inventory",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "VIN, make, model, and year",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "vin": {
                  "type": "string"
                },
                "make": {
                  "type": "string"
                },
                "model": {
                  "type": "string"
                },
                "year": {
                  "type": "integer"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "Vehicle": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Car not found"
          },
          "500": {
            "description": "Error fetching vehicle details"
          }
        }
      }
    },
    "/proxy_check_credit_score": {
      "post": {
        "tags": [
          "Financial Stub"
        ],
        "summary": "Proxy Check Credit Score",
        "description": "Proxy endpoint to check credit score",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "SSN",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "ssn": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object"
            },
            "headers": {
              "X-Rate-Limit": {
                "description": "Requests per hour allowed by the user",
                "type": "integer"
              },
              "X-Expires-After": {
                "description": "Date in UTC when the current token expires",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Missing data: SSN"
          },
          "500": {
            "description": "Failed to communicate with f_stub service"
          }
        }
      }
    },
    "/proxy_add_bank_account": {
      "post": {
        "tags": [
          "Financial Stub"
        ],
        "summary": "Proxy Add Bank Account",
        "description": "Proxy endpoint to add a bank account",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Bank account information",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "ssn": {
                  "type": "string"
                },
                "full_name": {
                  "type": "string"
                },
                "routing_number": {
                  "type": "string"
                },
                "account_number": {
                  "type": "string"
                },
                "bank": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object"
            }
          },
          "400": {
            "description": "All fields are required"
          },
          "500": {
            "description": "Failed to communicate with f_stub service"
          }
        }
      }
    },
    "/proxy_create_loan_and_payment": {
      "post": {
        "tags": [
          "Financial Stub"
        ],
        "summary": "Proxy Create Loan and Payment",
        "description": "Proxy endpoint to create a loan and payment",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Loan and payment information",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "ssn": {
                  "type": "string"
                },
                "loan_amount": {
                  "type": "number"
                },
                "monthly_amount": {
                  "type": "number"
                },
                "initial_payment_amount": {
                  "type": "number"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object"
            }
          },
          "400": {
            "description": "SSN and all loan and payment fields must be provided"
          },
          "404": {
            "description": "User not found with provided SSN"
          },
          "500": {
            "description": "Failed to communicate with the backend service"
          }
        }
      }
    },
    "/addCarWarranty": {
      "post": {
        "tags": [
          "Managers"
        ],
        "summary": "Add Car Warranty",
        "description": "Add a warranty for a car",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "VIN and option ID",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "vin": {
                  "type": "string"
                },
                "option_id": {
                  "type": "integer"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Error occurred during warranty addition"
          }
        }
      }
    }
  }
}